#!/usr/bin/env bash

set -e
set -o pipefail
set -u

# no pager
export AWS_PAGER=""

# env vars: re-declared here to trigger early failure if expected value is missing
install_id="$NUON_INSTALL_ID"
regenerate="$REGENERATE"
region="$REGION"
secret_name="$SECRET_NAME"
username="$USERNAME"

# derived constants
if [ "$REGENERATE" = "true" ];then
  echo >&2 "re generating secret: $secret_name"
  should_regenerate="true"
else
  echo >&2 "generating secret: $secret_name (iff it does not already exist)..."
  should_regenerate="false"
fi

function generate_secret() {
  password=`openssl rand -hex 24`
  # store the secrets in the temp file
  secret=`jq --null-input --arg username_ "$username" --arg password_ "$password" '{"username": $username_, "password": $password_}'`
  echo "$secret" > $tmp_loc
}

# tmp dir
timestamp=`date -Iminutes | sed 's/://g' | sed 's/-//g'`
tmp_dir="/tmp/gen-secret/$timestamp"
mkdir -p $tmp_dir
tmp_loc="$tmp_dir/secret.json"

# retrieve secret object from secrets manager
candidates=`aws --region $region secretsmanager list-secrets --filter "Key=name,Values=$secret_name" --output=json`
secret_count=$(echo $candidates | jq '.SecretList | length')

if [ "$secret_count" -eq "0" ];then # if it does not exist, create it
  echo >&2 "secret does not exist - creating it"
  # generate some secrets
  generate_secret
  # compose tags
  tags='[{"Key": "action.nuon.co/name", "Value": "gen_ch_secrets"}, {"Key": "install.nuon.co/id", "Value": "'"$install_id"'"}, {"Key": "component.nuon.co/for", "Value": "crd_clickhouse_operator"}]'
  # create secret from file
  aws --region $region secretsmanager create-secret --name "$secret_name" --tags "$tags" --secret-string "file://$tmp_loc"
  regenerated="false"
elif [[ "$secret_count" -eq "1" && "$should_regenerate" = "true" ]];then # if it does exist, and we should, regenerate it
  secret_id=`echo $candidates | jq '.SecretList[0].ARN'`
  echo >&2 "Secret does exist - regenerating $secret_id"
  # generate new secrets
  generate_secret
  aws --region $region secretsmanager update-secret --secret-id "$secret_name" --secret-string "file://$tmp_loc"
  regenerated="true"
else # secret exists but we should not regenerate
  echo >&2 "Secret does exist - doing nothing"
  regenerated="false"
fi

secret=`aws --region $region secretsmanager list-secrets --filter "Key=name,Values=$secret_name" --output=json | jq '.SecretList[0]'`

# compose outputs
outputs=`jq --null-input --arg regenerated_ "$regenerated" --argjson secret_ "$secret" '{"secret": $secret_, "regenerated": $regenerated_}'`

# write outputs
echo $outputs >> $NUON_ACTIONS_OUTPUT_FILEPATH
