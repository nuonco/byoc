operator:
  image:
    repository: "{{ .nuon.components.components.img_altinity_clickhouse_operator.outputs.image.repository }}"
    tag: "{{ .nuon.components.components.img_altinity_clickhouse_operator.outputs.image.tag }}"
    pullPolicy: IfNotPresent
  containerSecurityContext: {}
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

  # operator.env -- additional environment variables for the clickhouse-operator container in deployment
  # possible format value `[{"name": "SAMPLE", "value": "text"}]`
  env: []

metrics:
  enabled: true
  image:
    repository: "{{ .nuon.components.components.img_clickhouse_metrics_exporter.outputs.image.repository }}"
    tag: "{{ .nuon.components.components.img_clickhouse_metrics_exporter.outputs.image.tag }}"
    pullPolicy: IfNotPresent
  containerSecurityContext: {}
  # metrics.resources -- custom resource configuration
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

  # metrics.env -- additional environment variables for the deployment of metrics-exporter containers
  # possible format value `[{"name": "SAMPLE", "value": "text"}]`
  env: []

config:
  files:
    config.yaml:
      clickhouse:
        access:
          secret:
            namespace: clickhouse
            name: "clickhouse-operator"



# imagePullSecrets -- image pull secret for private images in clickhouse-operator pod
# possible value format `[{"name":"your-secret-name"}]`,
# check `kubectl explain pod.spec.imagePullSecrets` for details
imagePullSecrets: []

# podLabels -- labels to add to the clickhouse-operator pod
podLabels:
  "component.nuon.co/name": "clickhouse-operator"
  "component.nuon.co/domain": "storage"
  "component.nuon.co/tier": "core"

# podAnnotations -- annotations to add to the clickhouse-operator pod, check `kubectl explain pod.spec.annotations` for details
# @default -- check the `values.yaml` file
podAnnotations:
  prometheus.io/port: '8888'
  prometheus.io/scrape: 'true'
  clickhouse-operator-metrics/port: '9999'
  clickhouse-operator-metrics/scrape: 'true'

serviceAccount:
  # serviceAccount.create -- specifies whether a service account should be created
  create: true
  # serviceAccount.annotations -- annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- the name of the service account to use; if not set and create is true, a name is generated using the fullname template
  # name:
rbac:
  # rbac.create -- specifies whether cluster roles and cluster role bindings should be created
  create: true

# do not create the secret: this secret is generated by an action and the secret is copied w/ secrets operator
secret:
  create: false
  # username: ""
  # password: ""

# tolerations -- tolerations for scheduler pod assignment, check `kubectl explain pod.spec.tolerations` for details
tolerations:
  - effect: NoSchedule
    key: CriticalAddonsOnly
    value: "true"
  - effect: NoSchedule
    key: karpenter.sh/controller
    value: "true"
serviceMonitor:
  enabled: false

dashboards:
  enabled: false
